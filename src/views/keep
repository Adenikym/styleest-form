<template>

<div id="app">
  <div  class="player-container col-lg-6 offset-lg-3 mt-4">
    <vue-core-video-player :core="null"  :src="videos[0].src"></vue-core-video-player>
  </div>


</div>

</template>


<script>
import HLSCore from '@core-player/playcore-hls'
//https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8
//https://media.vued.vanthink.cn/sparkle_your_name_am720p.mp4
export default {
  
    data(){
        return{
          
             HLSCore,
             video:'https://media.vued.vanthink.cn/sparkle_your_name_am720p.mp4',
             videos:[
               {
                 type: 'video/mp4',
    src: 'https://media.vued.vanthink.cn/sparkle_your_name_am720p.mp4',
    
  }
             ],
             nothls:true


        }
    },


    methods:{

      
     togglePlayer(){
       if(this.videos[0].type=='video/m3u8'){
this.nothls=false
console.log(this.videos[0].type)
       }
     }
      
    }
}
</script>

<style scoped>
    
</style>
////////

<template>

<div id="app">
  <div v-if="nothls"  class="player-container col-lg-6 offset-lg-3 mt-4">
    <vue-core-video-player :core="null"  :src="videos[0].src"></vue-core-video-player>
  </div>
  <div v-else  class="player-container col-lg-6 offset-lg-3 mt-4">
    <vue-core-video-player :core="HLSCore"  :src="videos[0].src"></vue-core-video-player>
  </div>


</div>

</template>


<script>
import HLSCore from '@core-player/playcore-hls'
//https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8
//https://media.vued.vanthink.cn/sparkle_your_name_am720p.mp4
export default {
  
    data(){
        return{
          
             HLSCore,
             video:'https://media.vued.vanthink.cn/sparkle_your_name_am720p.mp4',
             videos:[
               {
                 type: 'video/m3u8',
    src: 'https://media.vued.vanthink.cn/sparkle_your_name_am720p.mp4',
    
  }
             ],
             nothls:true


        }
    },

    mounted(){
      this.togglePlayer()
    },


    methods:{

      
     togglePlayer(){
       if(this.videos[0].type=='video/m3u8'){
this.nothls=false
console.log(this.videos[0].type)
       }
     }
      
    }
}
</script>

<style scoped>
    
</style>


 



 <template>
  <div class="col-lg-12 ">

    <video-player class="  mt-4  offset-lg-5 "  :options="videoOptions"></video-player>
  </div>
</template>

<script>
import VideoPlayer from "../components/video";

export default {
	name: "VideoExample",
	components: {
		VideoPlayer
	},
	data() {
		return {
videoOptions: {
	autoplay: false,
	controls:true,
	
     muted:false,
                     //Whether fluid adaptive container width and height
       
                     //Set the display width of the video player (in pixels)
          width: "280px",
                     //Set the display height of the video player (in pixels)
          height: "400px",
	sources: [
	{
		src:
	"http://demo.unified-streaming.com/video/tears-of-steel/tears-of-steel.ism/.m3u8",
	type: "application/x-mpegURL"
	},
  {
		src:
	"https://media.vued.vanthink.cn/sparkle_your_name_am720p.mp4",
	type: "video/mp4"
	}
	],
  
	}
	};
	},
  methods:{
  
  }
};

</script>

